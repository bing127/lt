import 'package:app/common/icon.dart';
import 'package:app/common/utils/toast.dart';
import 'package:app/pages/home/widget/bottom_input.dart';
import 'package:app/routers/fluro_navigator.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_html/flutter_html.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:share/share.dart';

class DetailPage extends StatefulWidget {
  final String title;

  DetailPage({
    Key key,
    this.title,
  })  : assert(title != null),
        super(key: key);

  @override
  _DetailPageState createState() => _DetailPageState();
}

class _DetailPageState extends State<DetailPage> {
// 创建持久性BottomSheet
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  Widget build(BuildContext context) {
    ScreenUtil.init(context, width: 750, height: 1334, allowFontScaling: false);
    return Scaffold(
      key: _scaffoldKey,
      backgroundColor: Colors.white,
      appBar: AppBar(
        centerTitle: true,
        elevation: 0.0,
        leading: IconButton(
          icon: Icon(
            IconFont.icon_arrow_lift,
            color: Colors.black,
            size: ScreenUtil().setSp(60),
          ),
          onPressed: (){
            NavigatorUtils.goBack(context);
          },
        ),
        title: Text(
          "文章详情",
          style: TextStyle(
            fontSize: ScreenUtil().setSp(36)
          ),
        ),
        actions: <Widget>[
          IconButton(
            onPressed: _share,
            icon: Icon(
              IconFont.icon_share,
              color: Colors.black,
              size: ScreenUtil().setSp(60),
            ),
          )
        ],
      ),
      body: SafeArea(
        child: ListView(
          children: <Widget>[
            Container(
              padding: EdgeInsets.only(
                  top: ScreenUtil().setHeight(20),
                  left: ScreenUtil().setWidth(30),
                  right: ScreenUtil().setWidth(30)
              ),
              child: Text(
                "${widget.title}",
                style: TextStyle(
                    color: Color(0xff262626),
                    fontSize: ScreenUtil().setSp(32),
                    height: ScreenUtil().setHeight(2.5),
                    fontWeight: FontWeight.w700
                ),
              ),
              margin: EdgeInsets.only(
                bottom: ScreenUtil().setHeight(20)
              ),
            ),
            _articleTop(),
            Container(
              padding: EdgeInsets.only(
                  bottom: ScreenUtil().setHeight(20),
                  left: ScreenUtil().setWidth(30),
                  right: ScreenUtil().setWidth(30)
              ),
              child: Html(
                data:"""
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这篇文章将介绍<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Golang</code>并发编程中常用到一种编程模式：<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>。本文将从为什么需要<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>出发，深入了解<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的实现原理，以及了解如何使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>。</p>
<h3 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; border-bottom: 2px solid rgb(239, 112, 96); font-size: 1.3em;" id="hcontext" data-id="heading-1"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(239, 112, 96); color: rgb(255, 255, 255); padding: 3px 10px 1px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;">为什么需要context</span><span style="display: inline-block; vertical-align: bottom; border-bottom: 36px solid rgb(239, 235, 233); border-right: 20px solid transparent;"> </span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在并发程序中，由于超时、取消操作或者一些异常情况，往往需要进行抢占操作或者中断后续操作。熟悉<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>的朋友应该都见过使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>来处理此类问题。比如以下这个例子：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">main</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;messages&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">int</span>,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">10</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;done&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">defer</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">close</span>(messages)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;consumer</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">go</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ticker&nbsp;:=&nbsp;time.NewTicker(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">1</span>&nbsp;*&nbsp;time.Second)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;_&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">range</span>&nbsp;ticker.C&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">select</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;&lt;-done:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"child&nbsp;process&nbsp;interrupt..."</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">default</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Printf(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"send&nbsp;message:&nbsp;%d\n"</span>,&nbsp;&lt;-messages)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;producer</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;i&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">0</span>;&nbsp;i&nbsp;&lt;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">10</span>;&nbsp;i++&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages&nbsp;&lt;-&nbsp;i<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;time.Sleep(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">5</span>&nbsp;*&nbsp;time.Second)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">close</span>(done)<br>&nbsp;&nbsp;&nbsp;&nbsp;time.Sleep(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">1</span>&nbsp;*&nbsp;time.Second)<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"main&nbsp;process&nbsp;exit!"</span>)<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">上述例子中定义了一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">buffer</code>为0的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel done</code>, 子协程运行着定时任务。如果主协程需要在某个时刻发送消息通知子协程中断任务退出，那么就可以让子协程监听这个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>，一旦主协程关闭<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>，那么子协程就可以推出了，这样就实现了主协程通知子协程的需求。这很好，但是这也是有限的。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">如果我们可以在简单的通知上附加传递额外的信息来控制取消：为什么取消，或者有一个它必须要完成的最终期限，更或者有多个取消选项，我们需要根据额外的信息来判断选择执行哪个取消选项。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">考虑下面这种情况：假如主协程中有多个任务1, 2, …m，主协程对这些任务有超时控制；而其中任务1又有多个子任务1, 2, …n，任务1对这些子任务也有自己的超时控制，那么这些子任务既要感知主协程的取消信号，也需要感知任务1的取消信号。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">如果还是使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>的用法，我们需要定义两个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>，子任务们需要同时监听这两个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>。嗯，这样其实好像也还行哈。但是如果层级更深，如果这些子任务还有子任务，那么使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>的方式将会变得非常繁琐且混乱。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">我们需要一种优雅的方案来实现这样一种机制：</p>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">上层任务取消后，所有的下层任务都会被取消；</span></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">中间某一层的任务取消后，只会将当前任务的下层任务取消，而不会影响上层的任务以及同级任务。</span></li>
</ul>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这个时候<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>就派上用场了。我们首先看看<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的结构设计和实现原理。</p>
<h3 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; border-bottom: 2px solid rgb(239, 112, 96); font-size: 1.3em;" id="hcontext-1" data-id="heading-2"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(239, 112, 96); color: rgb(255, 255, 255); padding: 3px 10px 1px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;">context是什么</span><span style="display: inline-block; vertical-align: bottom; border-bottom: 36px solid rgb(239, 235, 233); border-right: 20px solid transparent;"> </span></h3>
<h4 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.2em;" id="hcontext-2" data-id="heading-3"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">context接口</span></h4>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">先看<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Context</code>接口结构，看起来非常简单。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;Context&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Deadline()&nbsp;(deadline&nbsp;time.Time,&nbsp;ok&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Done()&nbsp;&lt;-<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Err()&nbsp;error<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Value(key&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{})&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Context</code>接口包含四个方法：</p>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Deadline</code>返回绑定当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的任务被取消的截止时间；如果没有设定期限，将返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">ok == false</code>。</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Done</code> 当绑定当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的任务被取消时，将返回一个关闭的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>；如果当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>不会被取消，将返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">nil</code>。</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Err</code> 如果<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Done</code>返回的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>没有关闭，将返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">nil</code>;如果<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Done</code>返回的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>已经关闭，将返回非空的值表示任务结束的原因。如果是<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>被取消，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Err</code>将返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Canceled</code>；如果是<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>超时，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Err</code>将返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">DeadlineExceeded</code>。</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Value</code> 返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>存储的键值对中当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>对应的值，如果没有对应的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>,则返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">nil</code>。</li>
</ul>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">可以看到<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Done</code>方法返回的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>正是用来传递结束信号以抢占并中断当前任务；<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Deadline</code>方法指示一段时间后当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">goroutine</code>是否会被取消；以及一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Err</code>方法，来解释<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">goroutine</code>被取消的原因；而<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Value</code>则用于获取特定于当前任务树的额外信息。而<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>所包含的额外信息键值对是如何存储的呢？其实可以想象一颗树，树的每个节点可能携带一组键值对,如果当前节点上无法找到<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>所对应的值，就会向上去父节点里找，直到根节点，具体后面会说到。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">再来看看<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>包中的其他关键内容。</p>
<h4 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.2em;" id="hemptyctx" data-id="heading-4"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">emptyCtx</span></h4>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">emptyCtx</code>是一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">int</code>类型的变量，但实现了<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的接口。<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">emptyCtx</code>没有超时时间，不能取消，也不能存储任何额外信息，所以<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">emptyCtx</code>用来作为<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>树的根节点。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;An&nbsp;emptyCtx&nbsp;is&nbsp;never&nbsp;canceled,&nbsp;has&nbsp;no&nbsp;values,&nbsp;and&nbsp;has&nbsp;no&nbsp;deadline.&nbsp;It&nbsp;is&nbsp;not</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;struct{},&nbsp;since&nbsp;vars&nbsp;of&nbsp;this&nbsp;type&nbsp;must&nbsp;have&nbsp;distinct&nbsp;addresses.</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;emptyCtx&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">int</span><br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(*emptyCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Deadline</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(deadline&nbsp;time.Time,&nbsp;ok&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span><br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(*emptyCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Done</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;&lt;-<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">struct</span></span>{}&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(*emptyCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Err</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">error</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(*emptyCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Value</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(key&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{})</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">interface</span></span>{}&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(e&nbsp;*emptyCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">String</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">switch</span>&nbsp;e&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;background:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"context.Background"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;todo:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"context.TODO"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"unknown&nbsp;empty&nbsp;Context"</span><br>}<br><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">var</span>&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;background&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">new</span>(emptyCtx)<br>&nbsp;&nbsp;&nbsp;&nbsp;todo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">new</span>(emptyCtx)<br>)<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Background</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Context</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;background<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">TODO</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Context</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;todo<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">但我们一般不会直接使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">emptyCtx</code>，而是使用由<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">emptyCtx</code>实例化的两个变量，分别可以通过调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Background</code>和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">TODO</code>方法得到，但这两个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>在实现上是一样的。那么<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Background</code>和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">TODO</code>方法得到的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>有什么区别呢？可以看一下官方的解释：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;Background&nbsp;returns&nbsp;a&nbsp;non-nil,&nbsp;empty&nbsp;Context.&nbsp;It&nbsp;is&nbsp;never&nbsp;canceled,&nbsp;has&nbsp;no</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;values,&nbsp;and&nbsp;has&nbsp;no&nbsp;deadline.&nbsp;It&nbsp;is&nbsp;typically&nbsp;used&nbsp;by&nbsp;the&nbsp;main&nbsp;function,</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;initialization,&nbsp;and&nbsp;tests,&nbsp;and&nbsp;as&nbsp;the&nbsp;top-level&nbsp;Context&nbsp;for&nbsp;incoming</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;requests.</span><br><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;TODO&nbsp;returns&nbsp;a&nbsp;non-nil,&nbsp;empty&nbsp;Context.&nbsp;Code&nbsp;should&nbsp;use&nbsp;context.TODO&nbsp;when</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;it's&nbsp;unclear&nbsp;which&nbsp;Context&nbsp;to&nbsp;use&nbsp;or&nbsp;it&nbsp;is&nbsp;not&nbsp;yet&nbsp;available&nbsp;(because&nbsp;the</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;surrounding&nbsp;function&nbsp;has&nbsp;not&nbsp;yet&nbsp;been&nbsp;extended&nbsp;to&nbsp;accept&nbsp;a&nbsp;Context</span><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;parameter).</span><br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Background</code>和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">TODO</code>只是用于不同场景下：<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Background</code>通常被用于主函数、初始化以及测试中，作为一个顶层的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，也就是说一般我们创建的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>都是基于<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Background</code>；而<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">TODO</code>是在不确定使用什么<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的时候才会使用。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">下面将介绍两种不同功能的基础<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>类型：<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>。</p>
<h4 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.2em;" id="hvaluectx" data-id="heading-5"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">valueCtx</span></h4>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hvaluectx-1" data-id="heading-6"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">valueCtx结构体</span></h5>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;valueCtx&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Context<br>&nbsp;&nbsp;&nbsp;&nbsp;key,&nbsp;val&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{}<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*valueCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Value</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(key&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{})</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">interface</span></span>{}&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.key&nbsp;==&nbsp;key&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c.val<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c.Context.Value(key)<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>利用一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Context</code>类型的变量来表示父节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，所以当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>继承了父<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的所有信息；<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>类型还携带一组键值对，也就是说这种<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>可以携带额外的信息。<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>实现了<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Value</code>方法，用以在<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链路上获取<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>对应的值，如果当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>上不存在需要的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>,会沿着<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链向上寻找<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">key</code>对应的值，直到根节点。</p>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hwithvalue" data-id="heading-7"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">WithValue</span></h5>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithValue</code>用以向<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>添加键值对：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="hljs go copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">WithValue</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context,&nbsp;key,&nbsp;val&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>{})</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Context</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;key&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">panic</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"nil&nbsp;key"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;!reflect.TypeOf(key).Comparable()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">panic</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"key&nbsp;is&nbsp;not&nbsp;comparable"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;&amp;valueCtx{parent,&nbsp;key,&nbsp;val}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这里添加键值对不是在原<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>结构体上直接添加，而是以此<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>作为父节点，重新创建一个新的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>子节点，将键值对添加在子节点上，由此形成一条<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链。获取<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">value</code>的过程就是在这条<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链上由尾部上前搜寻：</p>
<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;" title="" alt="" class="lazyload inited" data-src="https://user-gold-cdn.xitu.io/2020/2/22/1706d7199b5de7f8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="812" data-height="168" src="data:image/svg+xml;utf8,<?xml version=&quot;1.0&quot;?><svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; width=&quot;812&quot; height=&quot;168&quot;></svg>"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
<h4 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1.2em;" id="hcancelctx" data-id="heading-8"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">cancelCtx</span></h4>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hcancelctx-1" data-id="heading-9"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">cancelCtx结构体</span></h5>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;cancelCtx&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Context<br><br>&nbsp;&nbsp;&nbsp;&nbsp;mu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sync.Mutex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;protects&nbsp;following&nbsp;fields</span><br>&nbsp;&nbsp;&nbsp;&nbsp;done&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;created&nbsp;lazily,&nbsp;closed&nbsp;by&nbsp;first&nbsp;cancel&nbsp;call</span><br>&nbsp;&nbsp;&nbsp;&nbsp;children&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">map</span>[canceler]<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{}&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;set&nbsp;to&nbsp;nil&nbsp;by&nbsp;the&nbsp;first&nbsp;cancel&nbsp;call</span><br>&nbsp;&nbsp;&nbsp;&nbsp;err&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;set&nbsp;to&nbsp;non-nil&nbsp;by&nbsp;the&nbsp;first&nbsp;cancel&nbsp;call</span><br>}<br><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;canceler&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">interface</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;cancel(removeFromParent&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>,&nbsp;err&nbsp;error)<br>&nbsp;&nbsp;&nbsp;&nbsp;Done()&nbsp;&lt;-<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">跟<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>类似，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>中也有一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>变量作为父节点；变量<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done</code>表示一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>，用来表示传递关闭信号；<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">children</code>表示一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">map</code>，存储了当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>节点下的子节点；<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">err</code>用于存储错误信息表示任务结束的原因。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">再来看一下<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>实现的方法：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*cancelCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Done</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;&lt;-<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">struct</span></span>{}&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.done&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.done&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{})<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;:=&nbsp;c.done<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Unlock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;d<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*cancelCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Err</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">error</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;err&nbsp;:=&nbsp;c.err<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Unlock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;err<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*cancelCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">cancel</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(removeFromParent&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>,&nbsp;err&nbsp;error)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;err&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">panic</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"context:&nbsp;internal&nbsp;error:&nbsp;missing&nbsp;cancel&nbsp;error"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.err&nbsp;!=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Unlock()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;already&nbsp;canceled</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;设置取消原因</span><br>&nbsp;&nbsp;&nbsp;&nbsp;c.err&nbsp;=&nbsp;err<br>&nbsp;&nbsp;&nbsp;&nbsp;设置一个关闭的channel或者将done&nbsp;channel关闭，用以发送关闭信号<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.done&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.done&nbsp;=&nbsp;closedchan<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">close</span>(c.done)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;将子节点context依次取消</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;child&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">range</span>&nbsp;c.children&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-doctag">NOTE:</span>&nbsp;acquiring&nbsp;the&nbsp;child's&nbsp;lock&nbsp;while&nbsp;holding&nbsp;parent's&nbsp;lock.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span>,&nbsp;err)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c.children&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Unlock()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;removeFromParent&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;将当前context节点从父节点上移除</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeChild(c.Context,&nbsp;c)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">可以发现<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>类型变量其实也是<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">canceler</code>类型，因为<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>实现了<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">canceler</code>接口。<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Done</code>方法和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Err</code>方法没必要说了，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>类型的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>在调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancel</code>方法时会设置取消原因，将<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>设置为一个关闭<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>或者关闭<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>，然后将子节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>依次取消，如果有需要还会将当前节点从父节点上移除。</p>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hwithcancel" data-id="heading-10"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">WithCancel</span></h5>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithCancel</code>函数用来创建一个可取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，即<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>类型的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>。<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithCancel</code>返回一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>和一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">CancelFunc</code>，调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">CancelFunc</code>即可触发<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancel</code>操作。直接看源码：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;CancelFunc&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span><br><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">WithCancel</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context)</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(ctx&nbsp;Context,&nbsp;cancel&nbsp;CancelFunc)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;:=&nbsp;newCancelCtx(parent)<br>&nbsp;&nbsp;&nbsp;&nbsp;propagateCancel(parent,&nbsp;&amp;c)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;&amp;c,&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{&nbsp;c.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span>,&nbsp;Canceled)&nbsp;}<br>}<br><br><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;newCancelCtx&nbsp;returns&nbsp;an&nbsp;initialized&nbsp;cancelCtx.</span><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">newCancelCtx</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">cancelCtx</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;将parent作为父节点context生成一个新的子节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;cancelCtx{Context:&nbsp;parent}<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">propagateCancel</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context,&nbsp;child&nbsp;canceler)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;parent.Done()&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;parent.Done()返回nil表明父节点以上的路径上没有可取消的context</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;parent&nbsp;is&nbsp;never&nbsp;canceled</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;获取最近的类型为cancelCtx的祖先节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;p,&nbsp;ok&nbsp;:=&nbsp;parentCancelCtx(parent);&nbsp;ok&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;p.err&nbsp;!=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;parent&nbsp;has&nbsp;already&nbsp;been&nbsp;canceled</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span>,&nbsp;p.err)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;p.children&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.children&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">map</span>[canceler]<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{})<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;将当前子节点加入最近cancelCtx祖先节点的children中</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.children[child]&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>{}{}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.mu.Unlock()<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">go</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">select</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;&lt;-parent.Done():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span>,&nbsp;parent.Err())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;&lt;-child.Done():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}()<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">parentCancelCtx</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context)</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(*cancelCtx,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">switch</span>&nbsp;c&nbsp;:=&nbsp;parent.(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;*cancelCtx:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;*timerCtx:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;&amp;c.cancelCtx,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;*valueCtx:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent&nbsp;=&nbsp;c.Context<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">default</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">之前说到<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>取消时，会将后代节点中所有的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>都取消，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">propagateCancel</code>即用来建立当前节点与祖先节点这个取消关联逻辑。</p>
<ol style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: decimal;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">如果<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent.Done()</code>返回<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">nil</code>，表明父节点以上的路径上没有可取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，不需要处理；</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">如果在<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链上找到到<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>类型的祖先节点，则判断这个祖先节点是否已经取消，如果已经取消就取消当前节点；否则将当前节点加入到祖先节点的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">children</code>列表。</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">否则开启一个协程，监听<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent.Done()</code>和<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">child.Done()</code>，一旦<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent.Done()</code>返回的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>关闭，即<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链中某个祖先节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>被取消，则将当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>也取消。</li>
</ol>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这里或许有个疑问，为什么是祖先节点而不是父节点？这是因为当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链可能是这样的：</p>
<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;" title="" alt="" class="lazyload inited" data-src="https://user-gold-cdn.xitu.io/2020/2/22/1706d721a4ae0cd6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="848" data-height="505" src="data:image/svg+xml;utf8,<?xml version=&quot;1.0&quot;?><svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; width=&quot;848&quot; height=&quot;505&quot;></svg>"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>的父节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>并不是一个可取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，也就没法记录<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">children</code>。</p>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="htimerctx" data-id="heading-11"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">timerCtx</span></h5>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>是一种基于<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>类型，从字面上就能看出，这是一种可以定时取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">type</span>&nbsp;timerCtx&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">struct</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;cancelCtx<br>&nbsp;&nbsp;&nbsp;&nbsp;timer&nbsp;*time.Timer&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;Under&nbsp;cancelCtx.mu.</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;deadline&nbsp;time.Time<br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*timerCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Deadline</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(deadline&nbsp;time.Time,&nbsp;ok&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c.deadline,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span><br>}<br><br><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*timerCtx)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">cancel</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(removeFromParent&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>,&nbsp;err&nbsp;error)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;将内部的cancelCtx取消<br>&nbsp;&nbsp;&nbsp;&nbsp;c.cancelCtx.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span>,&nbsp;err)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;removeFromParent&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;Remove&nbsp;this&nbsp;timerCtx&nbsp;from&nbsp;its&nbsp;parent&nbsp;cancelCtx's&nbsp;children.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeChild(c.cancelCtx.Context,&nbsp;c)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.timer&nbsp;!=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;取消计时器<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.timer.Stop()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.timer&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Unlock()<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>内部使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>实现取消，另外使用定时器<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timer</code>和过期时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">deadline</code>实现定时取消的功能。<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>在调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancel</code>方法，会先将内部的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>取消，如果需要则将自己从<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>祖先节点上移除，最后取消计时器。</p>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hwithdeadline" data-id="heading-12"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">WithDeadline</span></h5>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithDeadline</code>返回一个基于<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent</code>的可取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，并且其过期时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">deadline</code>不晚于所设置时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">d</code>。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">WithDeadline</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context,&nbsp;d&nbsp;time.Time)</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(Context,&nbsp;CancelFunc)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;cur,&nbsp;ok&nbsp;:=&nbsp;parent.Deadline();&nbsp;ok&nbsp;&amp;&amp;&nbsp;cur.Before(d)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;The&nbsp;current&nbsp;deadline&nbsp;is&nbsp;already&nbsp;sooner&nbsp;than&nbsp;the&nbsp;new&nbsp;one.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;WithCancel(parent)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;:=&nbsp;&amp;timerCtx{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cancelCtx:&nbsp;newCancelCtx(parent),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deadline:&nbsp;&nbsp;d,<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;建立新建context与可取消context祖先节点的取消关联关系</span><br>&nbsp;&nbsp;&nbsp;&nbsp;propagateCancel(parent,&nbsp;c)<br>&nbsp;&nbsp;&nbsp;&nbsp;dur&nbsp;:=&nbsp;time.Until(d)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;dur&nbsp;&lt;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">0</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span>,&nbsp;DeadlineExceeded)&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;deadline&nbsp;has&nbsp;already&nbsp;passed</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c,&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{&nbsp;c.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">false</span>,&nbsp;Canceled)&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;c.mu.Lock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">defer</span>&nbsp;c.mu.Unlock()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">if</span>&nbsp;c.err&nbsp;==&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.timer&nbsp;=&nbsp;time.AfterFunc(dur,&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span>,&nbsp;DeadlineExceeded)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;c,&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{&nbsp;c.cancel(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">true</span>,&nbsp;Canceled)&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<ol style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: decimal;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">如果父节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent</code>有过期时间并且过期时间早于给定时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">d</code>，那么新建的子节点<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>无需设置过期时间，使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithCancel</code>创建一个可取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>即可；</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">否则，就要利用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">parent</code>和过期时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">d</code>创建一个定时取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>，并建立新建<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>与可取消<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>祖先节点的取消关联关系，接下来判断当前时间距离过期时间<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">d</code>的时长<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">dur</code>：</li>
</ol>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">如果<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">dur</code>小于0，即当前已经过了过期时间，则直接取消新建的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>，原因为<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">DeadlineExceeded</code>；</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">否则，为新建的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>设置定时器，一旦到达过期时间即取消当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timerCtx</code>。</li>
</ul>
<h5 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; font-size: 1em;" id="hwithtimeout" data-id="heading-13"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">WithTimeout</span></h5>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">与<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithDeadline</code>类似，<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithTimeout</code>也是创建一个定时取消的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>，只不过<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithDeadline</code>是接收一个过期时间点，而<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">WithTimeout</code>接收一个相对当前时间的过期时长<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">timeout</code>:</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">WithTimeout</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(parent&nbsp;Context,&nbsp;timeout&nbsp;time.Duration)</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(Context,&nbsp;CancelFunc)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;WithDeadline(parent,&nbsp;time.Now().Add(timeout))<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<h3 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; border-bottom: 2px solid rgb(239, 112, 96); font-size: 1.3em;" id="hcontext-3" data-id="heading-14"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(239, 112, 96); color: rgb(255, 255, 255); padding: 3px 10px 1px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;">context的使用</span><span style="display: inline-block; vertical-align: bottom; border-bottom: 36px solid rgb(239, 235, 233); border-right: 20px solid transparent;"> </span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">首先使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>实现文章开头<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">done channel</code>的例子来示范一下如何更优雅实现协程间取消信号的同步：</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">main</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;messages&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">int</span>,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">10</span>)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;producer</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;i&nbsp;:=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">0</span>;&nbsp;i&nbsp;&lt;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">10</span>;&nbsp;i++&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages&nbsp;&lt;-&nbsp;i<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;ctx,&nbsp;cancel&nbsp;:=&nbsp;context.WithTimeout(context.Background(),&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">5</span>*time.Second)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;consumer</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">go</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(ctx&nbsp;context.Context)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ticker&nbsp;:=&nbsp;time.NewTicker(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">1</span>&nbsp;*&nbsp;time.Second)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;_&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">range</span>&nbsp;ticker.C&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">select</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;&lt;-ctx.Done():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"child&nbsp;process&nbsp;interrupt..."</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">default</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Printf(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"send&nbsp;message:&nbsp;%d\n"</span>,&nbsp;&lt;-messages)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}(ctx)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">defer</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">close</span>(messages)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">defer</span>&nbsp;cancel()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">select</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">case</span>&nbsp;&lt;-ctx.Done():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time.Sleep(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">1</span>&nbsp;*&nbsp;time.Second)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(221, 17, 68); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-string">"main&nbsp;process&nbsp;exit!"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这个例子中，只要让子线程监听主线程传入的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">ctx</code>，一旦<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">ctx.Done()</code>返回空<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">channel</code>，子线程即可取消执行任务。但这个例子还无法展现<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的传递取消信息的强大优势。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">阅读过<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">net/http</code>包源码的朋友可能注意到在实现<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">http server</code>时就用到了<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>, 下面简单分析一下。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">1、首先<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Server</code>在开启服务时会创建一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>,存储了<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">server</code>的相关信息，之后每建立一条连接就会开启一个协程，并携带此<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(srv&nbsp;*Server)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">Serve</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(l&nbsp;net.Listener)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">error</span></span>&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">var</span>&nbsp;tempDelay&nbsp;time.Duration&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;how&nbsp;long&nbsp;to&nbsp;sleep&nbsp;on&nbsp;accept&nbsp;failure</span><br>&nbsp;&nbsp;&nbsp;&nbsp;baseCtx&nbsp;:=&nbsp;context.Background()&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;base&nbsp;is&nbsp;always&nbsp;background,&nbsp;per&nbsp;Issue&nbsp;16220</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ctx&nbsp;:=&nbsp;context.WithValue(baseCtx,&nbsp;ServerContextKey,&nbsp;srv)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rw,&nbsp;e&nbsp;:=&nbsp;l.Accept()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempDelay&nbsp;=&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;:=&nbsp;srv.newConn(rw)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.setState(c.rwc,&nbsp;StateNew)&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;before&nbsp;Serve&nbsp;can&nbsp;return</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">go</span>&nbsp;c.serve(ctx)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">2、建立连接之后会基于传入的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>创建一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">valueCtx</code>用于存储本地地址信息，之后在此基础上又创建了一个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>，然后开始从当前连接中读取网络请求，每当读取到一个请求则会将该<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>传入，用以传递取消信号。一旦连接断开，即可发送取消信号，取消所有进行中的网络请求。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*conn)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">serve</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(ctx&nbsp;context.Context)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;c.remoteAddr&nbsp;=&nbsp;c.rwc.RemoteAddr().String()<br>&nbsp;&nbsp;&nbsp;&nbsp;ctx&nbsp;=&nbsp;context.WithValue(ctx,&nbsp;LocalAddrContextKey,&nbsp;c.rwc.LocalAddr())<br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;ctx,&nbsp;cancelCtx&nbsp;:=&nbsp;context.WithCancel(ctx)<br>&nbsp;&nbsp;&nbsp;&nbsp;c.cancelCtx&nbsp;=&nbsp;cancelCtx<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">defer</span>&nbsp;cancelCtx()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">for</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w,&nbsp;err&nbsp;:=&nbsp;c.readRequest(ctx)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serverHandler{c.server}.ServeHTTP(w,&nbsp;w.req)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">3、读取到请求之后，会再次基于传入的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>创建新的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>,并设置到当前请求对象<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">req</code>上，同时生成的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">response</code>对象中<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>保存了当前<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>取消方法。</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;" class="Go language-Go hljs copyable"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-function"><span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">func</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(c&nbsp;*conn)</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 0, 0); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-title">readRequest</span><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(ctx&nbsp;context.Context)</span>&nbsp;<span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-params">(w&nbsp;*response,&nbsp;err&nbsp;error)</span></span>&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;req,&nbsp;err&nbsp;:=&nbsp;readRequest(c.bufr,&nbsp;keepHostHeader)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;ctx,&nbsp;cancelCtx&nbsp;:=&nbsp;context.WithCancel(ctx)<br>&nbsp;&nbsp;&nbsp;&nbsp;req.ctx&nbsp;=&nbsp;ctx<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;=&nbsp;&amp;response{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cancelCtx:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cancelCtx,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reqBody:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req.Body,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlerHeader:&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(Header),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentLength:&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">-1</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closeNotifyCh:&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 134, 179); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-built_in">make</span>(<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">chan</span>&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">bool</span>,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-number">1</span>),<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;We&nbsp;populate&nbsp;these&nbsp;ahead&nbsp;of&nbsp;time&nbsp;so&nbsp;we're&nbsp;not</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;reading&nbsp;from&nbsp;req.Header&nbsp;after&nbsp;their&nbsp;Handler&nbsp;starts</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(153, 153, 136); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-comment">//&nbsp;and&nbsp;maybe&nbsp;mutates&nbsp;it&nbsp;(Issue&nbsp;14940)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wants10KeepAlive:&nbsp;req.wantsHttp10KeepAlive(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wantsClose:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req.wantsClose(),<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;" class="hljs-keyword">return</span>&nbsp;w,&nbsp;<span style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(0, 128, 128); word-wrap: inherit !important; word-break: inherit !important;" class="hljs-literal">nil</span><br>}<br><span class="copy-code-btn">复制代码</span></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">这样处理的目的主要有以下几点：</p>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">一旦请求超时，即可中断当前请求；</p></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在处理构建<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">response</code>过程中如果发生错误，可直接调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">response</code>对象的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>方法结束当前请求；</p></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在处理构建<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">response</code>完成之后，调用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">response</code>对象的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">cancelCtx</code>方法结束当前请求。</p></li>
</ul>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">在整个<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">server</code>处理流程中，使用了一条<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>链贯穿<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Server</code>、<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Connection</code>、<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">Request</code>，不仅将上游的信息共享给下游任务，同时实现了上游可发送取消信号取消所有下游任务，而下游任务自行取消不会影响上游任务。</p>
<h3 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; border-bottom: 2px solid rgb(239, 112, 96); font-size: 1.3em;" id="h-1" data-id="heading-15"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(239, 112, 96); color: rgb(255, 255, 255); padding: 3px 10px 1px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;">总结</span><span style="display: inline-block; vertical-align: bottom; border-bottom: 36px solid rgb(239, 235, 233); border-right: 20px solid transparent;"> </span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>主要用于父子任务之间的同步取消信号，本质上是一种协程调度的方式。另外在使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>时有两点值得注意：上游任务仅仅使用<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>通知下游任务不再需要，但不会直接干涉和中断下游任务的执行，由下游任务自行决定后续的处理操作，也就是说<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>的取消操作是无侵入的；<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>是线程安全的，因为<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">context</code>本身是不可变的（<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(255, 80, 44); background: rgb(248, 248, 248);">immutable</code>），因此可以放心地在多个协程中传递使用。</p>
<h3 style="color: inherit; line-height: inherit; padding: 0px; margin: 1.6em 0px; font-weight: bold; border-bottom: 2px solid rgb(239, 112, 96); font-size: 1.3em;" id="h-2" data-id="heading-16"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(239, 112, 96); color: rgb(255, 255, 255); padding: 3px 10px 1px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;">参考资料</span><span style="display: inline-block; vertical-align: bottom; border-bottom: 36px solid rgb(239, 235, 233); border-right: 20px solid transparent;"> </span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">1、<a style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word;" href="https://golang.org/pkg/context/" target="_blank" rel="nofollow noopener noreferrer">Package context</a></p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">2、<a style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word;" href="https://blog.golang.org/context" target="_blank" rel="nofollow noopener noreferrer">Go Concurrency Patterns: Context</a></p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">3、<a style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word;" href="http://p.agnihotry.com/post/understanding_the_context_package_in_golang/" target="_blank" rel="nofollow noopener noreferrer">Understanding the context package in golang</a></p></div></div></article>
                """,
                customRender: {
                  "code": (context, child, attributes,el)  {
                    return Text(
                      el.text,
                      style: TextStyle(
                        backgroundColor: Color.fromRGBO(248, 248, 248, 1)
                      ),
                    );
                  }
                }
              ),
            ),
            _commentView()
          ],
        ),
      ),
      bottomNavigationBar: _footerBtn(),
    );
  }

  Widget _articleTop(){
    return Container(
      padding: EdgeInsets.only(
          left: ScreenUtil().setWidth(30),
          bottom: ScreenUtil().setHeight(30),
          right: ScreenUtil().setWidth(30)
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: <Widget>[
          Row(
            children: <Widget>[
              CircleAvatar(
                backgroundImage: NetworkImage("https://user-gold-cdn.xitu.io/2019/10/15/16dcdf8e62c21d12?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1"),
                radius: ScreenUtil().setWidth(46),
              ),
              Container(
                child: Text(
                  "jsliushen",
                  style: TextStyle(
                      color: Color(0xff333333),
                      fontSize: ScreenUtil().setSp(35)
                  ),
                ),
                margin: EdgeInsets.only(
                    left: ScreenUtil().setWidth(20),
                    right: ScreenUtil().setWidth(20)
                ),
              ),
              Text(
                "3分钟前",
                style: TextStyle(
                    color: Color(0xff909090),
                    fontSize: ScreenUtil().setSp(26)
                ),
              )
            ],
          ),
          Material(
            color: Colors.transparent,
            child: InkWell(
              onTap: (){},
              child: Container(
                alignment: Alignment.center,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: <Widget>[
                    Icon(
                      IconFont.icon_add_select,
                      color: Color(0xff4286F5),
                      size: ScreenUtil().setSp(40),
                    ),
                    Text(
                      "关注",
                      style: TextStyle(
                          color: Color(0xff4286F5),
                          fontSize: ScreenUtil().setSp(26)
                      ),
                    )
                  ],
                ),
                decoration: BoxDecoration(
                    border: Border.all(
                        color: Color(0xff4286F5),
                        width: ScreenUtil().setWidth(1.5)
                    ),
                    borderRadius: BorderRadius.circular(ScreenUtil().setWidth(5))
                ),
                padding: EdgeInsets.all(
                    ScreenUtil().setWidth(6)
                ),
              ),
            ),
          )
        ],
      ),
    );
  }

  Widget _footerBtn(){
    return Container(
      padding: EdgeInsets.only(
        top: ScreenUtil().setHeight(10),
        bottom: ScreenUtil().setHeight(10)
      ),
      color: Colors.white,
      width: double.infinity,
      height: ScreenUtil().setHeight(90),
      child: Row(
        children: <Widget>[
          Expanded(
            child: Material(
              child: InkWell(
                child: Container(
                  alignment: Alignment.center,
                  padding: EdgeInsets.only(
                      left: ScreenUtil().setWidth(20),
                      right: ScreenUtil().setWidth(10)
                  ),
                  child: Container(
                    width: double.infinity,
                    padding: EdgeInsets.only(
                        left: ScreenUtil().setWidth(10),
                        right: ScreenUtil().setWidth(10),
                        top: ScreenUtil().setHeight(15),
                        bottom: ScreenUtil().setHeight(15)
                    ),
                    child: Text(
                      "有何高见，展开讲讲",
                      style: TextStyle(
                          color: Color(0xffB2B4B3)
                      ),
                      textAlign: TextAlign.center,
                    ),
                    decoration: BoxDecoration(
                        color: Color(0xffF7F8FC),
                        borderRadius: BorderRadius.circular(ScreenUtil().setWidth(5))
                    ),
                  ),
                ),
                onTap: _showInputBox,
              ),
            ),
          ),
          /// 评论
          _btn(
              162,
              "ic_tab_comments_no_number_black"
          ),
          _btn(
            162,
            "ic_tab_praise__black_normal"
          ),
          _btn(
              6,
              "ic_tab_collection_light_normal"
          ),
          _btn(
              16,
              "ic_toolbar_share_dark"
          )
        ],
      ),
    );
  }

  Widget _btn(int total,String icon){
    Widget child;
    double right = 0;
    if(total < 10){
      right = ScreenUtil().setWidth(10);
      child = Container(
        alignment: Alignment.center,
        width: ScreenUtil().setWidth(40),
        height: ScreenUtil().setWidth(40),
        decoration: BoxDecoration(
            color: Color(0xffFCD3DE),
            borderRadius: BorderRadius.circular(ScreenUtil().setWidth(50)),
            border: Border.all(color: Colors.white,width: ScreenUtil().setWidth(3))
        ),
        child: Text(
          "$total",
          style: TextStyle(
              color: Color(0xffDE7079),
              fontSize: ScreenUtil().setSp(25)
          ),
        ),
      );
    } else {
      if(total >= 10 && total < 100){
        right = ScreenUtil().setWidth(9);
      } else {
        right = 0;
      }
      child = Container(
        alignment: Alignment.center,
        decoration: BoxDecoration(
            color: Color(0xffFCD3DE),
            borderRadius: BorderRadius.circular(ScreenUtil().setWidth(50)),
            border: Border.all(color: Colors.white,width: ScreenUtil().setWidth(3))
        ),
        padding: EdgeInsets.all(ScreenUtil().setWidth(3)),
        child: Text(
          "$total",
          style: TextStyle(
              color: Color(0xffDE7079),
              fontSize: ScreenUtil().setSp(25)
          ),
        ),
      );
    }
    return Stack(
      children: <Widget>[
        Container(
          width: ScreenUtil().setWidth(100),
          height: double.infinity,
          alignment: Alignment.center,
          child: Image.asset(
            "assets/icon/$icon.png",
            width: ScreenUtil().setWidth(50),
            height: ScreenUtil().setWidth(50),
          ),
        ),
        Positioned(
          right: right,
          top: 0,
          child: child,
        )
      ],
    );
  }

  Widget _commentView(){
    return Container(
      padding: EdgeInsets.only(
          top: ScreenUtil().setHeight(20),
      ),
      color: Color(0xffF4F6FA),
      child: Container(
        color: Colors.white,
        padding: EdgeInsets.only(
          left: ScreenUtil().setWidth(30),
          right: ScreenUtil().setWidth(30),
          bottom: ScreenUtil().setHeight(20)
        ),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: <Widget>[
            Container(
              height: ScreenUtil().setHeight(60),
              child: Row(
                children: <Widget>[
                  Container(
                    height: ScreenUtil().setHeight(40),
                    width: ScreenUtil().setWidth(5),
                    decoration: BoxDecoration(
                        color: Color(0xff4286F5),
                        borderRadius: BorderRadius.circular(ScreenUtil().setWidth(3))
                    ),
                    margin: EdgeInsets.only(
                        right: ScreenUtil().setWidth(20)
                    ),
                  ),
                  Text(
                    "评论区",
                    style: TextStyle(
                        color: Color(0xff262626),
                        fontSize: ScreenUtil().setSp(30)
                    ),
                  )
                ],
              ),
            ),
            Container(
              color: Colors.white,
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: <Widget>[
                  _commentItem(),
                  _commentItem(),
                  _commentItem(),
                ],
              ),
            )
          ],
        ),
      ),
    );
  }

  Widget _commentItem(){
    return Container(
      padding: EdgeInsets.only(
        top: ScreenUtil().setHeight(20)
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          CircleAvatar(
            backgroundImage: NetworkImage("https://user-gold-cdn.xitu.io/2019/10/15/16dcdf8e62c21d12?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1"),
            radius: ScreenUtil().setWidth(40),
          ),
          SizedBox(
            width: ScreenUtil().setWidth(15),
          ),
          Expanded(
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: <Widget>[
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: <Widget>[
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      mainAxisSize: MainAxisSize.min,
                      children: <Widget>[
                        Row(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: <Widget>[
                            Text(
                              "不在乎的在乎",
                              style: TextStyle(
                                  color: Color(0xff39586C),
                                  fontSize: ScreenUtil().setSp(30)
                              ),
                            ),
                            _grade('LV1'),
                          ],
                        ),
                        SizedBox(
                          height: ScreenUtil().setHeight(15),
                        ),
                        Row(
                          children: <Widget>[
                            Text(
                              "全干工程师",
                              style: TextStyle(
                                  color: Color(0xff9EA3A7),
                                  fontSize: ScreenUtil().setSp(28)
                              ),
                            ),
                            Text(
                              " · ",
                              style: TextStyle(
                                  color: Color(0xff9EA3A7)
                              ),
                            ),
                            Text(
                              "1小时前",
                              style: TextStyle(
                                  color: Color(0xff9EA3A7),
                                  fontSize: ScreenUtil().setSp(28)
                              ),
                            )
                          ],
                        )
                      ],
                    ),
                    IconButton(
                      icon: Image.asset(
                        "assets/icon/ic_tab_praise__black_normal.png",
                        width: ScreenUtil().setWidth(40),
                        height: ScreenUtil().setWidth(40),
                      ),
                      onPressed: (){},
                    )
                  ],
                ),
                SizedBox(
                  height: ScreenUtil().setHeight(20),
                ),
                Text(
                  "有代码地址的吗？我是伸手党",
                  style: TextStyle(
                    color: Color(0xff292929),
                    fontSize: ScreenUtil().setSp(28)
                  ),
                ),
                Container(
                  width: double.infinity,
                  margin: EdgeInsets.only(
                    top: ScreenUtil().setHeight(20)
                  ),
                  padding: EdgeInsets.only(
                    bottom: ScreenUtil().setHeight(20),
                    left: ScreenUtil().setWidth(20),
                    right: ScreenUtil().setWidth(20)
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    mainAxisSize: MainAxisSize.min,
                    children: <Widget>[
                      Container(
                        margin: EdgeInsets.only(
                            top: ScreenUtil().setHeight(20)
                        ),
                        child: RichText(
                          text: TextSpan(children: <TextSpan>[
                            TextSpan(
                                text: "jsliushen",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff232726)
                                )
                            ),
                            TextSpan(
                                text: "(作者)：",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff232726)
                                )
                            ),
                            TextSpan(
                                text: "文章里就有呀，一看就没仔细读",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff757575),
                                    height: ScreenUtil().setHeight(2.5)
                                )
                            ),
                          ]),
                        ),
                      ),
                      Container(
                        margin: EdgeInsets.only(
                          top: ScreenUtil().setHeight(20)
                        ),
                        child: RichText(
                          text: TextSpan(children: <TextSpan>[
                            TextSpan(
                                text: "Serendipity君",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff232726)
                                )
                            ),
                            TextSpan(
                                text: " 回复 ",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff757575)
                                )
                            ),
                            TextSpan(
                                text: "jsliushen",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff232726)
                                )
                            ),
                            TextSpan(
                                text: "(作者)：",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff232726)
                                )
                            ),
                            TextSpan(
                                text: "一楼留给自己... 大家有问题欢迎留言讨论",
                                style: TextStyle(
                                    fontSize: ScreenUtil().setSp(29),
                                    color: Color(0xff757575),
                                    height: ScreenUtil().setHeight(2.5)
                                )
                            ),
                          ]),
                        ),
                      )
                    ],
                  ),
                  decoration: BoxDecoration(
                    color: Color(0xffF4F8F7),
                        borderRadius: BorderRadius.circular(ScreenUtil().setWidth(3)
                      )
                  ),
                )
              ],
            ),
          )
        ],
      ),
    );
  }

  Widget _grade(String title){
    return Container(
      margin: EdgeInsets.only(
        left: ScreenUtil().setWidth(10)
      ),
      child: Text(
        "$title",
        style: TextStyle(
          fontSize: ScreenUtil().setSp(23),
          color: Colors.white
        ),
      ),
      padding: EdgeInsets.only(
        left: ScreenUtil().setWidth(8),
        right: ScreenUtil().setWidth(8),
        top: ScreenUtil().setWidth(2),
        bottom: ScreenUtil().setWidth(2)
      ),
      decoration: BoxDecoration(
        color: Color(0xff8FD8EE),
        borderRadius: BorderRadius.circular(ScreenUtil().setWidth(3))
      ),
    );
  }

  void _showInputBox(){
    showModalBottomSheet(
        context: context,
        useRootNavigator: true,
        isScrollControlled: true,
        isDismissible: true,
        backgroundColor: Colors.transparent,
        builder: (_){
          return StatefulBuilder(
            builder: (stateContext,state){
              return GestureDetector(
                onVerticalDragUpdate: (e)=>false,
                child: BottomInput(
                  confirm: (String text){
                    Toast.show("我是评论内容:$text");
                  },
                ),
              );
            },
          );
        }
    );
  }

  void _share(){
    Share.share("q12312",subject: "龙潭-专业IT技术社区：https://www.lt.com");
  }

}
